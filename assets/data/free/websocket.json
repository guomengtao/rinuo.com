{
  "category": "WebSocket服务",
  "description": "提供实时通信、双向数据传输、实时聊天、实时通知等WebSocket服务的API接口",
  "version": "1.0.0",
  "last_updated": "2025-01-20",
  "total_apis": 5,
  "apis": [
    {
      "id": "websocket-001",
      "name": "Socket.io",
      "description": "流行的实时通信库，支持WebSocket和降级传输",
      "endpoint": "本地服务器",
      "method": "JavaScript API",
      "parameters": {
        "server": "服务器实例",
        "namespace": "命名空间",
        "room": "房间",
        "event": "事件名称"
      },
      "response_format": "实时数据",
      "rate_limit": "无限制",
      "is_free": true,
      "documentation": "https://socket.io/docs/",
      "website": "https://socket.io",
      "tags": ["实时通信", "跨平台", "完全免费"]
    },
    {
      "id": "websocket-002",
      "name": "Pusher",
      "description": "托管的实时通信服务，提供WebSocket和REST API",
      "endpoint": "https://api-{cluster}.pusherapp.com",
      "method": "WebSocket/HTTP",
      "parameters": {
        "app_id": "应用ID",
        "key": "应用密钥",
        "secret": "应用密钥",
        "cluster": "集群",
        "channel": "频道"
      },
      "response_format": "JSON",
      "rate_limit": "根据套餐",
      "is_free": true,
      "documentation": "https://pusher.com/docs/",
      "website": "https://pusher.com",
      "tags": ["托管服务", "实时推送", "免费套餐"]
    },
    {
      "id": "websocket-003",
      "name": "Firebase Realtime Database",
      "description": "Google Firebase实时数据库，支持实时数据同步",
      "endpoint": "https://{project-id}.firebaseio.com",
      "method": "WebSocket/HTTP",
      "parameters": {
        "auth": "认证令牌",
        "database": "数据库URL",
        "path": "数据路径",
        "query": "查询参数"
      },
      "response_format": "JSON",
      "rate_limit": "根据套餐",
      "is_free": true,
      "documentation": "https://firebase.google.com/docs/database",
      "website": "https://firebase.google.com",
      "tags": ["Google生态", "实时同步", "免费套餐"]
    },
    {
      "id": "websocket-004",
      "name": "Ably",
      "description": "企业级实时通信平台，支持多种协议和功能",
      "endpoint": "https://rest.ably.io",
      "method": "WebSocket/HTTP",
      "parameters": {
        "key": "API密钥",
        "channel": "频道名称",
        "message": "消息内容",
        "client_id": "客户端ID"
      },
      "response_format": "JSON",
      "rate_limit": "根据套餐",
      "is_free": true,
      "documentation": "https://ably.com/docs/",
      "website": "https://ably.com",
      "tags": ["企业级", "多协议", "免费套餐"]
    },
    {
      "id": "websocket-005",
      "name": "Native WebSocket",
      "description": "浏览器原生WebSocket API，无需额外库",
      "endpoint": "ws://或wss://",
      "method": "WebSocket协议",
      "parameters": {
        "url": "WebSocket URL",
        "protocols": "协议数组",
        "readyState": "连接状态",
        "onmessage": "消息处理"
      },
      "response_format": "二进制/文本",
      "rate_limit": "无限制",
      "is_free": true,
      "documentation": "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket",
      "website": "https://developer.mozilla.org",
      "tags": ["浏览器原生", "标准协议", "完全免费"]
    }
  ],
  "examples": {
    "create_websocket": {
      "description": "创建WebSocket连接",
      "endpoint": "Native WebSocket",
      "code": "const ws = new WebSocket('ws://localhost:8080');",
      "response": "WebSocket连接对象"
    },
    "send_message": {
      "description": "发送WebSocket消息",
      "endpoint": "Socket.io",
      "code": "socket.emit('message', 'Hello World');",
      "response": "消息发送成功"
    },
    "join_room": {
      "description": "加入Socket.io房间",
      "endpoint": "Socket.io",
      "code": "socket.join('room1');",
      "response": "成功加入房间"
    }
  },
  "sdk_libraries": [
    {
      "language": "JavaScript",
      "package": "socket.io-client",
      "install": "npm install socket.io-client",
      "usage": "import { io } from 'socket.io-client'; const socket = io();"
    },
    {
      "language": "JavaScript",
      "package": "pusher-js",
      "install": "npm install pusher-js",
      "usage": "import Pusher from 'pusher-js'; const pusher = new Pusher('key');"
    },
    {
      "language": "Python",
      "package": "python-socketio",
      "install": "pip install python-socketio",
      "usage": "import socketio; sio = socketio.Client()"
    }
  ]
}
